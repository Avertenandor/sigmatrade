/* site-interactions.js - –ì–ª–∞–≤–Ω—ã–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å–∞–π—Ç–∞ */

(()=>{
  'use strict';

  // –ñ–¥—ë–º –∑–∞–≥—Ä—É–∑–∫–∏ DOM
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', init);
  } else {
    init();
  }

  function init() {
    initHeaderScroll();
    initNavigationCards();
    initWalletCopy();
    initLogoClick();
    console.log('[site-interactions] Site interactions initialized');
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∫—Ä–æ–ª–ª–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∏–ª—è header
   */
  function initHeaderScroll() {
    const header = document.getElementById('siteHeader');
    if (!header) return;

    let lastScroll = 0;
    const scrollThreshold = 50;

    function handleScroll() {
      const currentScroll = window.pageYOffset;

      if (currentScroll > scrollThreshold) {
        header.classList.add('scrolled');
        document.body.classList.add('header-scrolled');
      } else {
        header.classList.remove('scrolled');
        document.body.classList.remove('header-scrolled');
      }

      lastScroll = currentScroll;
    }

    window.addEventListener('scroll', handleScroll, { passive: true });
    handleScroll(); // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  }

  /**
   * –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –∫–∞—Ä—Ç–æ—á–∫–∞–º: –ø–ª–∞–≤–Ω—ã–π —Å–∫—Ä–æ–ª–ª –∏–ª–∏ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
   */
  function initNavigationCards() {
    const navItems = document.querySelectorAll('.premium-nav-item[data-section]');

    navItems.forEach(item => {
      item.addEventListener('click', function() {
        const status = this.getAttribute('data-status');
        const sectionId = this.getAttribute('data-section');

        // –ï—Å–ª–∏ –∫–∞—Ä—Ç–æ—á–∫–∞ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º "soon", –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        if (status === 'soon') {
          const botName = this.querySelector('.premium-nav-item-name').textContent;
          showSoonModal(botName);
          return;
        }

        // –ò–Ω–∞—á–µ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ —Å–µ–∫—Ü–∏–∏
        if (sectionId) {
          scrollToSection(sectionId);
        }
      });
    });
  }

  /**
   * –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ —Å–µ–∫—Ü–∏–∏
   */
  function scrollToSection(sectionId) {
    const section = document.getElementById(sectionId);
    if (!section) {
      console.warn(`[site-interactions] Section ${sectionId} not found`);
      return;
    }

    // –ü–æ–ª—É—á–∞–µ–º –≤—ã—Å–æ—Ç—É header –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ offset
    const header = document.getElementById('siteHeader');
    const headerHeight = header ? header.offsetHeight : 70;
    const offset = 20; // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç—Å—Ç—É–ø

    const targetPosition = section.offsetTop - headerHeight - offset;

    window.scrollTo({
      top: targetPosition,
      behavior: 'smooth'
    });

    // –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º —Ü–µ–ª–µ–≤—É—é —Å–µ–∫—Ü–∏—é –Ω–∞ 1 —Å–µ–∫—É–Ω–¥—É
    section.classList.add('section-highlight');
    setTimeout(() => {
      section.classList.remove('section-highlight');
    }, 1000);
  }

  /**
   * –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ "–°–∫–æ—Ä–æ –∑–∞–ø—É—Å—Ç–∏–º"
   */
  function showSoonModal(botName) {
    // –°–æ–∑–¥–∞—ë–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    const modal = document.createElement('div');
    modal.className = 'soon-modal';
    modal.innerHTML = `
      <div class="soon-modal-backdrop"></div>
      <div class="soon-modal-content">
        <div class="soon-modal-header">
          <h3>${botName}</h3>
          <button class="soon-modal-close">&times;</button>
        </div>
        <div class="soon-modal-body">
          <div class="soon-modal-icon">üöß</div>
          <p class="soon-modal-text">–ù–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.</p>
        </div>
        <div class="soon-modal-footer">
          <button class="soon-modal-btn">–ü–æ–Ω—è—Ç–Ω–æ</button>
        </div>
      </div>
    `;

    document.body.appendChild(modal);

    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
    requestAnimationFrame(() => {
      modal.classList.add('active');
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è
    const closeBtn = modal.querySelector('.soon-modal-close');
    const okBtn = modal.querySelector('.soon-modal-btn');
    const backdrop = modal.querySelector('.soon-modal-backdrop');

    function closeModal() {
      modal.classList.remove('active');
      setTimeout(() => {
        modal.remove();
      }, 300);
    }

    closeBtn.addEventListener('click', closeModal);
    okBtn.addEventListener('click', closeModal);
    backdrop.addEventListener('click', closeModal);

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ ESC
    function handleEsc(e) {
      if (e.key === 'Escape') {
        closeModal();
        document.removeEventListener('keydown', handleEsc);
      }
    }
    document.addEventListener('keydown', handleEsc);
  }

  /**
   * –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ –∫–æ—à–µ–ª—å–∫–∞
   */
  function initWalletCopy() {
    const copyBtn = document.getElementById('walletCopyBtn');
    if (!copyBtn) return;

    const fullAddress = '0xB6858fCb3A7985E4b6d3f8aF9be3d1617c5a895b'; // –ü–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å

    copyBtn.addEventListener('click', async function(e) {
      e.preventDefault();
      e.stopPropagation();

      try {
        await navigator.clipboard.writeText(fullAddress);
        showToast('‚úÖ –ê–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!', 'success');
      } catch (err) {
        console.error('[site-interactions] Failed to copy:', err);
        showToast('‚ùå –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è', 'error');
      }
    });
  }

  /**
   * –ö–ª–∏–∫ –ø–æ –ª–æ–≥–æ—Ç–∏–ø—É –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é
   */
  function initLogoClick() {
    const logo = document.getElementById('siteLogo');
    if (!logo) return;

    logo.addEventListener('click', function(e) {
      // –ï—Å–ª–∏ –º—ã —É–∂–µ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ, –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –≤–≤–µ—Ä—Ö
      if (window.location.pathname === '/' || window.location.pathname === '/index.html') {
        e.preventDefault();
        window.scrollTo({
          top: 0,
          behavior: 'smooth'
        });
      }
      // –ò–Ω–∞—á–µ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ —Å—Å—ã–ª–∫–∏)
    });
  }

  /**
   * Toast-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
   */
  function showToast(message, type = 'info') {
    // –°–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è toast, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    let container = document.getElementById('toast-container');
    if (!container) {
      container = document.createElement('div');
      container.id = 'toast-container';
      container.className = 'toast-container';
      document.body.appendChild(container);
    }

    // –°–æ–∑–¥–∞—ë–º toast
    const toast = document.createElement('div');
    toast.className = `toast toast-${type}`;
    toast.textContent = message;

    container.appendChild(toast);

    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
    requestAnimationFrame(() => {
      toast.classList.add('show');
    });

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
      toast.classList.remove('show');
      setTimeout(() => {
        toast.remove();
      }, 300);
    }, 3000);
  }

  // –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
  window.siteInteractions = {
    showToast,
    scrollToSection,
    version: '1.0.0'
  };
})();
