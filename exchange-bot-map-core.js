/**
 * Exchange Bot Map Core Module
 * Handles: Initialization, Data Setup, Animation Loop, Transforms
 */

class ExchangeBotMapCore {
    constructor() {
        this.svg = null;
        this.contentGroup = null;
        this.nodes = [];
        this.links = [];

        // Transform state
        this.currentScale = 1;
        this.targetScale = 1;
        this.currentX = 0;
        this.currentY = 0;
        this.targetX = 0;
        this.targetY = 0;

        // Animation state
        this.animationFrame = null;
        this.isAnimating = false;

        // Drag state
        this.isDragging = false;
        this.isPanning = false;
        this.draggedNode = null;
        this.dragStartX = 0;
        this.dragStartY = 0;

        // Viewport
        this.viewBoxWidth = 1600;
        this.viewBoxHeight = 1000;

        // Throttle state
        this.lastWheelTime = 0;
        this.wheelThrottle = 16; // ~60fps

        // Mobile detection
        this.isMobile = window.innerWidth < 768;

        this.initialized = false;
    }

    /**
     * Smooth easing functions
     */
    easeOutCubic(t) {
        return 1 - Math.pow(1 - t, 3);
    }

    easeInOutQuad(t) {
        return t < 0.5 ? 2 * t * t : 1 - Math.pow(-2 * t + 2, 2) / 2;
    }

    /**
     * Interpolate between current and target values
     */
    lerp(start, end, alpha) {
        return start + (end - start) * alpha;
    }

    /**
     * Initialize the exchange bot map
     */
    init() {
        if (this.initialized) return;

        this.svg = document.getElementById('exchangeBotSvg');
        this.contentGroup = document.getElementById('exchangeBotContent');

        if (!this.svg || !this.contentGroup) {
            console.error('Exchange bot map SVG elements not found');
            return;
        }

        // Update mobile detection
        this.isMobile = window.innerWidth < 768;

        this.setupData();

        // Delegate rendering to render module
        if (window.ExchangeBotMapRender) {
            window.ExchangeBotMapRender.render(this);
            window.ExchangeBotMapRender.setupEventListeners(this);
        }

        this.centerView();
        this.startAnimationLoop();

        this.initialized = true;
    }

    /**
     * Main animation loop for smooth 60fps animations
     */
    startAnimationLoop() {
        const animate = () => {
            // Smooth interpolation towards target
            const alpha = 0.2;

            this.currentScale = this.lerp(this.currentScale, this.targetScale, alpha);
            this.currentX = this.lerp(this.currentX, this.targetX, alpha);
            this.currentY = this.lerp(this.currentY, this.targetY, alpha);

            // Apply SVG transform
            this.applyTransform();

            // Continue animation loop
            this.animationFrame = requestAnimationFrame(animate);
        };

        animate();
    }

    /**
     * Apply transform to content group
     */
    applyTransform() {
        const transform = `translate(${this.currentX}, ${this.currentY}) scale(${this.currentScale})`;
        this.contentGroup.setAttribute('transform', transform);
    }

    /**
     * Setup exchange bot data structure
     */
    setupData() {
        const centerX = 800;
        const centerY = 500;
        const stepX = 280; // horizontal spacing
        const stepY = 180; // vertical spacing

        // Main flow nodes
        this.nodes = [
            // Central node - The Bot
            {
                id: 'bot',
                label: '–ë–æ—Ç-–æ–±–º–µ–Ω–Ω–∏–∫',
                type: 'core',
                x: centerX,
                y: centerY,
                icon: 'ü§ñ',
                description: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ–±–º–µ–Ω –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç',
                detail: '24/7 —Ä–∞–±–æ—Ç–∞ –Ω–∞ BSC'
            },

            // Exchange Process Flow (Top)
            {
                id: 'user-request',
                label: '–ó–∞–ø—Ä–æ—Å –æ–±–º–µ–Ω–∞',
                type: 'process',
                x: centerX - stepX * 1.5,
                y: centerY - stepY,
                icon: 'üë§',
                description: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –æ–±–º–µ–Ω',
                detail: '–ù–∞–ø—Ä–∏–º–µ—Ä: BNB ‚Üí USDT'
            },
            {
                id: 'rate-calc',
                label: '–†–∞—Å—á–µ—Ç –∫—É—Ä—Å–∞',
                type: 'process',
                x: centerX - stepX * 0.5,
                y: centerY - stepY,
                icon: 'üí±',
                description: '–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ –∫—É—Ä—Å–∞',
                detail: '–ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏'
            },
            {
                id: 'execute',
                label: '–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ',
                type: 'process',
                x: centerX + stepX * 0.5,
                y: centerY - stepY,
                icon: '‚ö°',
                description: '–ò—Å–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–±–º–µ–Ω–∞',
                detail: '–ë—ã—Å—Ç—Ä–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–∞ –±–ª–æ–∫—á–µ–π–Ω–µ'
            },
            {
                id: 'complete',
                label: '–ó–∞–≤–µ—Ä—à–µ–Ω–æ',
                type: 'success',
                x: centerX + stepX * 1.5,
                y: centerY - stepY,
                icon: '‚úÖ',
                description: '–û–±–º–µ–Ω —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω',
                detail: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∞–µ—Ç –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É'
            },

            // Commission Flow (Right side)
            {
                id: 'commission',
                label: '–ö–æ–º–∏—Å—Å–∏—è',
                type: 'money',
                x: centerX + stepX,
                y: centerY,
                icon: 'üí∞',
                description: '–£–¥–µ—Ä–∂–∞–Ω–∏–µ –∫–æ–º–∏—Å—Å–∏–∏',
                detail: '–û—Ç 0.1% –¥–æ 0.8% –æ—Ç —Å—É–º–º—ã –æ–±–º–µ–Ω–∞'
            },
            {
                id: 'commission-range',
                label: '0.1% - 0.8%',
                type: 'info',
                x: centerX + stepX * 1.7,
                y: centerY - stepY * 0.5,
                icon: 'üìä',
                description: '–ü–ª–∞–≤–∞—é—â–∞—è –∫–æ–º–∏—Å—Å–∏—è',
                detail: '–ó–∞–≤–∏—Å–∏—Ç –æ—Ç –æ–±—ä–µ–º–∞ –∏ —É—Å–ª–æ–≤–∏–π'
            },

            // Distribution (Bottom Right)
            {
                id: 'distribute',
                label: '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ',
                type: 'process',
                x: centerX + stepX,
                y: centerY + stepY,
                icon: 'üéØ',
                description: '–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–º–∏—Å—Å–∏–∏',
                detail: '–ú–µ–∂–¥—É —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –æ–±–æ—Ä–æ—Ç–∞'
            },

            // Participants (Bottom)
            {
                id: 'participant-1',
                label: '–£—á–∞—Å—Ç–Ω–∏–∫ 1',
                type: 'participant',
                x: centerX - stepX * 0.8,
                y: centerY + stepY * 1.5,
                icon: 'üë§',
                description: '–°—Ä–µ–¥—Å—Ç–≤–∞ –≤ –æ–±–æ—Ä–æ—Ç–µ',
                detail: '–ü–æ–ª—É—á–∞–µ—Ç % –æ—Ç –∫–æ–º–∏—Å—Å–∏–∏'
            },
            {
                id: 'participant-2',
                label: '–£—á–∞—Å—Ç–Ω–∏–∫ 2',
                type: 'participant',
                x: centerX,
                y: centerY + stepY * 1.5,
                icon: 'üë§',
                description: '–°—Ä–µ–¥—Å—Ç–≤–∞ –≤ –æ–±–æ—Ä–æ—Ç–µ',
                detail: '–ü–æ–ª—É—á–∞–µ—Ç % –æ—Ç –∫–æ–º–∏—Å—Å–∏–∏'
            },
            {
                id: 'participant-3',
                label: '–£—á–∞—Å—Ç–Ω–∏–∫ 3',
                type: 'participant',
                x: centerX + stepX * 0.8,
                y: centerY + stepY * 1.5,
                icon: 'üë§',
                description: '–°—Ä–µ–¥—Å—Ç–≤–∞ –≤ –æ–±–æ—Ä–æ—Ç–µ',
                detail: '–ü–æ–ª—É—á–∞–µ—Ç % –æ—Ç –∫–æ–º–∏—Å—Å–∏–∏'
            },
            {
                id: 'more-participants',
                label: '–ò –¥—Ä—É–≥–∏–µ...',
                type: 'participant',
                x: centerX + stepX * 1.6,
                y: centerY + stepY * 1.5,
                icon: 'üë•',
                description: '–í—Å–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –æ–±–æ—Ä–æ—Ç–∞',
                detail: '–î–æ—Ö–æ–¥ –ø—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª–µ–Ω –≤–ª–æ–∂–µ–Ω–∏—è–º'
            },

            // Capital Pool (Left Bottom)
            {
                id: 'capital-pool',
                label: '–û–±–æ—Ä–æ—Ç–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞',
                type: 'pool',
                x: centerX - stepX,
                y: centerY + stepY * 0.5,
                icon: 'üíé',
                description: '–°—Ä–µ–¥—Å—Ç–≤–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ —Ä–∞–±–æ—Ç–µ',
                detail: '–û–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç—å'
            },

            // WARNING - Unauthorized Deposit (Left side - RED)
            {
                id: 'warning',
                label: '‚ö†Ô∏è –í–ê–ñ–ù–û!',
                type: 'warning',
                x: centerX - stepX * 1.5,
                y: centerY,
                icon: 'üö®',
                description: '–í–ù–ò–ú–ê–ù–ò–ï!',
                detail: '–ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ –ø–µ—Ä–µ–¥ –¥–µ–π—Å—Ç–≤–∏—è–º–∏'
            },
            {
                id: 'no-interview-deposit',
                label: '–î–µ–ø–æ–∑–∏—Ç –±–µ–∑ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è',
                type: 'danger',
                x: centerX - stepX * 1.5,
                y: centerY + stepY,
                icon: '‚ùå',
                description: '–ü–æ–ø—ã—Ç–∫–∞ –≤–Ω–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞–ø—Ä—è–º—É—é',
                detail: '–ë–ï–ó –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è'
            },
            {
                id: 'money-lost',
                label: '–ü–û–¢–ï–†–Ø –°–†–ï–î–°–¢–í',
                type: 'danger',
                x: centerX - stepX * 1.5,
                y: centerY + stepY * 1.8,
                icon: 'üí∏',
                description: '‚ùå –°—Ä–µ–¥—Å—Ç–≤–∞ –ù–ï –í–û–ó–í–†–ê–©–ê–Æ–¢–°–Ø',
                detail: '–î–µ–Ω—å–≥–∏ –≤–Ω–µ—Å–µ–Ω–Ω—ã–µ —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º —Ç–µ—Ä—è—é—Ç—Å—è –Ω–∞–≤—Å–µ–≥–¥–∞'
            },

            // Proper Way (Top Left - GREEN)
            {
                id: 'proper-way',
                label: '‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å',
                type: 'success',
                x: centerX - stepX * 1.5,
                y: centerY - stepY * 1.5,
                icon: 'üéØ',
                description: '–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—á–∞—Ç—å',
                detail: '–°–ª–µ–¥—É–π—Ç–µ —ç—Ç–æ–º—É –ø—Ä–æ—Ü–µ—Å—Å—É'
            },
            {
                id: 'interview-first',
                label: '–°–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ',
                type: 'success',
                x: centerX - stepX * 0.8,
                y: centerY - stepY * 1.5,
                icon: 'üé•',
                description: '–°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏—Ç–µ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ',
                detail: '–°–≤—è–∂–∏—Ç–µ—Å—å —Å trdgood00@gmail.com'
            }
        ];

        // Define connections (links)
        this.links = [
            // Main exchange flow
            { source: 'user-request', target: 'rate-calc', type: 'process' },
            { source: 'rate-calc', target: 'bot', type: 'process' },
            { source: 'bot', target: 'execute', type: 'process' },
            { source: 'execute', target: 'complete', type: 'process' },

            // Commission flow
            { source: 'bot', target: 'commission', type: 'money' },
            { source: 'commission', target: 'commission-range', type: 'info' },
            { source: 'commission', target: 'distribute', type: 'money' },

            // Distribution to participants
            { source: 'distribute', target: 'participant-1', type: 'money' },
            { source: 'distribute', target: 'participant-2', type: 'money' },
            { source: 'distribute', target: 'participant-3', type: 'money' },
            { source: 'distribute', target: 'more-participants', type: 'money' },

            // Capital pool
            { source: 'capital-pool', target: 'bot', type: 'pool' },
            { source: 'participant-1', target: 'capital-pool', type: 'pool' },
            { source: 'participant-2', target: 'capital-pool', type: 'pool' },
            { source: 'participant-3', target: 'capital-pool', type: 'pool' },

            // Warning path
            { source: 'warning', target: 'no-interview-deposit', type: 'danger' },
            { source: 'no-interview-deposit', target: 'money-lost', type: 'danger' },

            // Proper way
            { source: 'proper-way', target: 'interview-first', type: 'success' },
            { source: 'interview-first', target: 'capital-pool', type: 'success' }
        ];
    }

    /**
     * Smooth zoom
     */
    smoothZoom(factor) {
        this.targetScale = Math.max(0.3, Math.min(3, this.targetScale * factor));
    }

    /**
     * Reset view
     */
    reset() {
        this.targetScale = this.isMobile ? 0.4 : 0.7;
        this.targetX = 0;
        this.targetY = 0;
    }

    /**
     * Center view
     */
    centerView() {
        const svgRect = this.svg.getBoundingClientRect();
        const centerNode = this.nodes.find(n => n.id === 'bot');

        if (centerNode) {
            this.targetX = svgRect.width / 2 - centerNode.x;
            this.targetY = svgRect.height / 2 - centerNode.y;
        } else {
            this.targetX = svgRect.width / 2 - 800;
            this.targetY = svgRect.height / 2 - 500;
        }

        this.targetScale = this.isMobile ? 0.4 : 0.7;
    }

    /**
     * Cleanup
     */
    destroy() {
        if (this.animationFrame) {
            cancelAnimationFrame(this.animationFrame);
        }
        this.initialized = false;
    }
}

// Export to window for global access
if (typeof window !== 'undefined') {
    window.ExchangeBotMapCore = ExchangeBotMapCore;
}
